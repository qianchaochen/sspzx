package com.gionee.ssp.service.wk.impl;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;

import com.gionee.ssp.service.wk.ValidateService;
import com.wk.exception.SDKBusinessError;
import com.wk.ssp.mvc.exception.BusinessException;
import com.wk.ssp.utils.StringUtils;
import com.wk.ssp.utils.ValidateUtils;
import com.wk.ssp.utils.log.WKLogManager;
import com.wk.ssp.vo.sdk.SdkRequestVO;

/**
 * @description: 校验服务
 */
@Service
public class ValidateServiceImpl implements ValidateService {

	@Override
	public void validateVo(SdkRequestVO reqdata) {
		ValidateUtils.SDKValidate(reqdata);
	}

	@Override
	public void validateParam(HttpServletRequest reqs) {

		String svr = reqs.getParameter("svr");
		String device = reqs.getParameter("device");
		String cuid = reqs.getParameter("cuid");
		String clientId = reqs.getParameter("client_id");
		String deviceId = reqs.getParameter("device_id");

		if (StringUtils.isBlank(svr)) {

			throw new BusinessException(SDKBusinessError.MISSING_SVR);
		}
		if (null == device) {

			throw new BusinessException(SDKBusinessError.MISSING_DEVICE);
		}
		if (StringUtils.isBlank(cuid)) {

			throw new BusinessException(SDKBusinessError.MISSION_CUID);
		}
		if (null == clientId) {

			throw new BusinessException(SDKBusinessError.MISSING_CLIENT_ID);
		}
		if (null == deviceId) {

			throw new BusinessException(SDKBusinessError.MISSING_DEVICE_ID);
		}

		WKLogManager.getLOG().addReqAdLog("svr", svr).addReqAdLog("device_n", device).addReqAdLog("cuid", cuid)
				.addReqAdLog("client_id", clientId).addReqAdLog("device_id", deviceId);
	}
	@Override
	public void validatePreloadParam(HttpServletRequest reqs) {
		
		String channel = reqs.getParameter("channel");
		String time = reqs.getParameter("time");
		
		if (StringUtils.isBlank(channel)) {
			
			throw new BusinessException(SDKBusinessError.PARAM_ERROR);
		}else if(!"STORY_LOCKER".equals(channel)){
			throw new BusinessException(SDKBusinessError.VERIFICATION_FAILURE);
		}
		
		if (StringUtils.isBlank(time)) {
			
			throw new BusinessException(SDKBusinessError.PARAM_ERROR);
		}
	}
}
